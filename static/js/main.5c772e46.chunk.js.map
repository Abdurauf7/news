{"version":3,"sources":["components/Navbar.jsx","components/General.jsx","components/Bussiness.jsx","components/Technology.jsx","components/Sport.jsx","components/More.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Navbar","style","background","mode","Item","className","to","Component","Meta","Card","General","fetchMoreData","state","article","length","setState","hasMore","loader","notification","info","placement","message","duration","icon","type","color","axios","get","then","res","concat","data","articles","size","this","padding","gutter","dataLength","next","map","a","span","theme","bordered","title","author","extra","pathname","img","urlToImage","content","cover","alt","src","description","Bussiness","console","log","props","Technology","Sport","Content","Title","Typography","Paragraph","Text","More","history","useHistory","location","level","width","margin","onClick","push","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5c772e46.chunk.js","sourcesContent":["// react\nimport React, { Component } from \"react\";\n\n// third party\nimport { Link } from \"react-router-dom\";\nimport { Menu, Layout } from \"antd\";\n\n// custom\nimport \"../design/Navbar.css\";\n\nconst { Header } = Layout;\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <Layout style={{ background: \"transparent\" }}>\n        <Header style={{ background: \"transparent\" }}>\n          <Menu mode=\"horizontal\">\n            <Menu.Item className=\"item\">\n              <Link to=\"/\">General</Link>\n            </Menu.Item>\n            <Menu.Item>\n              <Link to=\"/bussiness\">Bussiness</Link>\n            </Menu.Item>\n            <Menu.Item>\n              <Link to=\"/technology\">Technology</Link>\n            </Menu.Item>\n\n            <Menu.Item>\n              <Link to=\"/sports\">Sports</Link>\n            </Menu.Item>\n          </Menu>\n        </Header>\n      </Layout>\n    );\n  }\n}\n","// react\nimport React, { Component } from \"react\";\n\n// third part\nimport { Card, Col, Row, Spin, notification, Icon, BackTop } from \"antd\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// custom\nimport \"../design/General.css\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nexport default class General extends Component {\n  constructor() {\n    super();\n    this.state = {\n      article: [],\n      hasMore: true,\n      loader: (\n        <div className=\"loading\">\n          <Spin size=\"large\"></Spin>\n        </div>\n      )\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?pageSize=100&country=us&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res => {\n        this.setState({ article: res.data.articles });\n      });\n  }\n\n  fetchMoreData = () => {\n    if (this.state.article.length >= 100) {\n      this.setState({ hasMore: false });\n      this.setState({\n        loader: notification.info({\n          placement: \"topRight\",\n          message: \"Loading is finished\",\n          duration: 2.5,\n          icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n        })\n      });\n      return;\n    }\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?pageSize=100&country=us&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res =>\n        this.setState({ article: this.state.article.concat(res.data.articles) })\n      );\n  };\n\n  render() {\n    const { article } = this.state;\n\n    return (\n      <div style={{ background: \"#ECECEC\", padding: \"30px\" }}>\n        <Row gutter={2}>\n          <InfiniteScroll\n            dataLength={this.state.article.length}\n            next={this.fetchMoreData}\n            hasMore={true}\n            loader={this.state.loader}\n          >\n            {article.map(a => (\n              <Col span={6}>\n                <BackTop>\n                  <div className=\"back-top\">\n                    <Icon type=\"up-circle\" theme=\"filled\" />\n                  </div>\n                </BackTop>\n                <Card\n                  bordered={false}\n                  title={a.author}\n                  extra={\n                    <Link\n                      to={{\n                        pathname: \"/more/\",\n                        state: {\n                          img: a.urlToImage,\n                          title: a.title,\n                          content: a.content,\n                          author: a.author\n                        }\n                      }}\n                    >\n                      More\n                    </Link>\n                  }\n                  cover={<img alt=\"\" src={a.urlToImage} />}\n                >\n                  <Meta title={a.title} description={a.description} />\n                </Card>\n              </Col>\n            ))}\n          </InfiniteScroll>\n        </Row>\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from \"react\";\n\n//third part\nimport { Card, Col, Row, Spin, notification, Icon, BackTop } from \"antd\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\n\n// custom\n\nconst { Meta } = Card;\n\nexport default class Bussiness extends Component {\n  constructor() {\n    super();\n    this.state = {\n      article: [],\n      hasMore: true,\n      loader: (\n        <div className=\"loading\">\n          <Spin size=\"large\"></Spin>\n        </div>\n      )\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.article.length >= 70) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res => {\n        this.setState({ article: res.data.articles });\n      });\n  }\n\n  fetchMoreData = () => {\n    if (this.state.article.length >= 100) {\n      this.setState({ hasMore: false });\n      this.setState({\n        loader: notification.info({\n          placement: \"topRight\",\n          message: \"Loading is finished\",\n          duration: 2.5,\n          icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n        })\n      });\n      return;\n    }\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?pageSize=100&country=gb&category=business&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res =>\n        this.setState({ article: this.state.article.concat(res.data.articles) })\n      );\n  };\n\n  render() {\n    console.log(this.props);\n    const { article } = this.state;\n    return (\n      <div style={{ background: \"#ECECEC\", padding: \"20px\" }}>\n        <Row gutter={5}>\n          <InfiniteScroll\n            dataLength={this.state.article.length}\n            next={this.fetchMoreData}\n            hasMore={true}\n            loader={this.state.loader}\n          >\n            {article.map(a => (\n              <Col span={6}>\n                <BackTop>\n                  <div className=\"back-top\">\n                    <Icon type=\"up-circle\" theme=\"filled\" />\n                  </div>\n                </BackTop>\n                <Card\n                  title={a.author}\n                  bordered={false}\n                  extra={\n                    <Link\n                      to={{\n                        pathname: \"/more/\",\n                        state: {\n                          img: a.urlToImage,\n                          title: a.title,\n                          content: a.content,\n                          author: a.author\n                        }\n                      }}\n                    >\n                      more\n                    </Link>\n                  }\n                  cover={<img alt=\"example\" src={a.urlToImage} />}\n                >\n                  <Meta title={a.title} description={a.description} />\n                </Card>\n              </Col>\n            ))}\n          </InfiniteScroll>\n        </Row>\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from \"react\";\n\n// third part\nimport { Card, Col, Row, Spin, notification, Icon, BackTop } from \"antd\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nexport default class Technology extends Component {\n  constructor() {\n    super();\n    this.state = {\n      article: [],\n      hasMore: true,\n      loader: (\n        <div className=\"loading\">\n          <Spin size=\"large\"></Spin>\n        </div>\n      )\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res => {\n        this.setState({ article: res.data.articles });\n      });\n  }\n\n  fetchMoreData = () => {\n    if (this.state.article.length >= 100) {\n      this.setState({ hasMore: false });\n      this.setState({\n        loader: notification.info({\n          placement: \"topRight\",\n          message: \"Loading is finished\",\n          duration: 2.5,\n          icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n        })\n      });\n      return;\n    }\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?pageSize=100&country=us&category=technology&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res =>\n        this.setState({ article: this.state.article.concat(res.data.articles) })\n      );\n  };\n\n  render() {\n    const { article } = this.state;\n    return (\n      <div style={{ background: \"#ECECEC\", padding: \"20px\" }}>\n        <Row gutter={5}>\n          <InfiniteScroll\n            dataLength={this.state.article.length}\n            next={this.fetchMoreData}\n            hasMore={true}\n            loader={this.state.loader}\n          >\n            {article.map(a => (\n              <Col span={6}>\n                <BackTop>\n                  <div className=\"back-top\">\n                    <Icon type=\"up-circle\" theme=\"filled\" />\n                  </div>\n                </BackTop>\n                <Card\n                  title={a.author}\n                  extra={\n                    <Link\n                      to={{\n                        pathname: \"/more/\",\n                        state: {\n                          img: a.urlToImage,\n                          title: a.title,\n                          content: a.content,\n                          author: a.author\n                        }\n                      }}\n                    >\n                      More\n                    </Link>\n                  }\n                  cover={<img alt=\"example\" src={a.urlToImage} />}\n                >\n                  <Meta title={a.title} description={a.description} />\n                </Card>\n              </Col>\n            ))}\n          </InfiniteScroll>\n        </Row>\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from \"react\";\n\n// third part\nimport { Card, Col, Row, Spin, notification, Icon, BackTop } from \"antd\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nexport default class Sport extends Component {\n  constructor() {\n    super();\n    this.state = {\n      article: [],\n      hasMore: true,\n      loader: (\n        <div className=\"loading\">\n          <Spin size=\"large\"></Spin>\n        </div>\n      )\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?country=us&category=sports&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res => {\n        this.setState({ article: res.data.articles });\n      });\n  }\n\n  fetchMoreData = () => {\n    if (this.state.article.length >= 100) {\n      this.setState({ hasMore: false });\n      this.setState({\n        loader: notification.info({\n          placement: \"topRight\",\n          message: \"Loading is finished\",\n          duration: 2.5,\n          icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n        })\n      });\n      return;\n    }\n    axios\n      .get(\n        \"http://newsapi.org/v2/top-headlines?pageSize=100&country=us&category=sports&apiKey=284367f5ba734899b242057a81dac8e0\"\n      )\n      .then(res =>\n        this.setState({ article: this.state.article.concat(res.data.articles) })\n      );\n  };\n\n  render() {\n    const { article } = this.state;\n    return (\n      <div style={{ background: \"#ECECEC\", padding: \"20px\" }}>\n        <Row gutter={5}>\n          <InfiniteScroll\n            dataLength={this.state.article.length}\n            next={this.fetchMoreData}\n            hasMore={true}\n            loader={this.state.loader}\n          >\n            {article.map(a => (\n              <Col span={6}>\n                <BackTop>\n                  <div className=\"back-top\">\n                    <Icon type=\"up-circle\" theme=\"filled\" />\n                  </div>\n                </BackTop>\n                <Card\n                  bordered={false}\n                  title={a.author}\n                  extra={\n                    <Link\n                      to={{\n                        pathname: \"/more/\",\n                        state: {\n                          img: a.urlToImage,\n                          title: a.title,\n                          content: a.content,\n                          author: a.author\n                        }\n                      }}\n                    >\n                      More\n                    </Link>\n                  }\n                  cover={<img alt=\"example\" src={a.urlToImage} />}\n                >\n                  <Meta title={a.title} description={a.description} />\n                </Card>\n              </Col>\n            ))}\n          </InfiniteScroll>\n        </Row>\n      </div>\n    );\n  }\n}\n","//React\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// third party\nimport { Layout, Typography, Button } from \"antd\";\n\n// custom\nimport \"../design/More.css\";\n\nconst { Content } = Layout;\nconst { Title, Paragraph, Text } = Typography;\n\nexport default function More(props) {\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Content style={{ padding: \"0 50px\" }}>\n        <div className=\"container\">\n          <img alt=\"example\" src={props.location.state.img} />\n\n          <div>\n            <Title level={4}>{props.location.state.title}</Title>\n          </div>\n          <div>\n            <Paragraph style={{ width: \"90%\" }}>\n              {props.location.state.content}\n            </Paragraph>\n          </div>\n          <div>\n            <Text>{props.location.state.author}</Text>\n          </div>\n\n          <Button\n            style={{ margin: \"1em 0\" }}\n            type=\"primary\"\n            onClick={handleClick}\n          >\n            Back to\n          </Button>\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n","// react\nimport React, { Fragment } from \"react\";\n// third party\nimport \"antd/dist/antd.css\";\nimport { Switch, Route } from \"react-router-dom\";\n// custom\nimport Navbar from \"./components/Navbar\";\nimport General from \"./components/General\";\nimport Bussiness from \"./components/Bussiness\";\nimport Technology from \"./components/Technology\";\nimport Sport from \"./components/Sport\";\nimport More from \"./components/More\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={General} />\n        <Route exact path=\"/bussiness/\" component={Bussiness} />\n        <Route exact path=\"/technology/\" component={Technology} />\n        <Route exact path=\"/sports/\" component={Sport} />\n        <Route exact path=\"/more/\" component={More} />\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}